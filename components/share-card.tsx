import { useEffect, useRef } from "react";
import QRCode from "qrcode";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Download } from "lucide-react";
import { format } from "date-fns";

interface ShareCardProps {
  children: React.ReactNode;
}

export function ShareCard({ children }: ShareCardProps) {
  const cardRef = useRef<HTMLDivElement>(null);
  const qrCodeRef = useRef<HTMLCanvasElement>(null);

  useEffect(() => {
    if (qrCodeRef.current) {
      QRCode.toCanvas(
        qrCodeRef.current,
        'https://kanji.twi.am',
        {
          width: 80,
          margin: 0,
          color: {
            dark: '#000000',
            light: '#FFFFFF',
          },
        }
      );
    }
  }, []);

  const handleDownload = async () => {
    if (!cardRef.current) return;

    const canvas = document.createElement('canvas');
    const context = canvas.getContext('2d');
    if (!context) return;

    // Use html2canvas to convert the card to canvas
    const html2canvas = (await import('html2canvas')).default;
    const canvasImage = await html2canvas(cardRef.current, {
      backgroundColor: null,
      scale: 2, // Higher resolution
    });

    // Create download link
    const link = document.createElement('a');
    link.download = `yearly-kanji-${format(new Date(), 'yyyy-MM-dd')}.png`;
    link.href = canvasImage.toDataURL('image/png');
    link.click();
  };

  return (
    <div className="space-y-4">
      <Card ref={cardRef} className="bg-white p-8 rounded-xl">
        {children}
        
        {/* Footer */}
        <div className="mt-8 pt-4 border-t flex items-center justify-between text-sm text-muted-foreground">
          <div className="space-y-1">
            <div>Generated at {format(new Date(), 'yyyy-MM-dd HH:mm:ss')}</div>
            <div>Generated by <a href="https://twi.am" target="_blank" rel="noopener noreferrer" className="underline">Twi.am</a></div>
          </div>
          <canvas ref={qrCodeRef} className="w-20 h-20" />
        </div>
      </Card>

      <div className="flex justify-center">
        <Button onClick={handleDownload} variant="outline" className="gap-2">
          <Download className="w-4 h-4" />
          Download Image
        </Button>
      </div>
    </div>
  );
}
